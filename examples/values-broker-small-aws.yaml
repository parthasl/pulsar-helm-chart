#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

## start
components:
  # zookeeper
  zookeeper: true
  # bookkeeper
  bookkeeper: true
  # bookkeeper - autorecovery
  autorecovery: true
  # broker
  broker: true
  # functions
  functions: true
  # proxy
  proxy: false
  # toolset
  toolset: false
  # pulsar manager
  pulsar_manager: false

## Images
##
## Control what images to use for each component
images:
  broker:
    repository: docker.ouroath.com:4443/cms
    tag: latest
    pullPolicy: IfNotPresent

monitoring:
  # monitoring - prometheus
  prometheus: true
  # monitoring - grafana
  grafana: true
  # monitoring - node_exporter
  node_exporter: false
  # alerting - alert-manager
  alert_manager: false

zookeeper:
  volumes:
    # use a persistent volume or emptyDir
    persistence: true
    data:
      name: data
      size: 5Gi
      local_storage: false
      ## If you already have an existent storage class and want to reuse it, you can specify its name with the option below
      ##
      storageClassName: gp2-small
      #
      ## Instead if you want to create a new storage class define it below
      ## If left undefined no storage class will be defined along with PVC
      ##
      # storageClass:
        # type: pd-ssd
        # fsType: xfs
        # provisioner: kubernetes.io/gce-pd
  configData:
    # we use `bin/pulsar` for starting bookie daemons
    PULSAR_ROUTING_APPENDER_DEFAULT: "RollingFile"
bookkeeper:
  replicaCount: 3
  volumes:
    # use a persistent volume or emptyDir
    persistence: true
    journal:
      name: journal
      size: 16Gi
      local_storage: false
      ## If you already have an existent storage class and want to reuse it, you can specify its name with the option below
      ##
      storageClassName: io2-small
    ledgers:
      name: ledgers
      size: 16Gi
      local_storage: false
      ## If you already have an existent storage class and want to reuse it, you can specify its name with the option below
      ##
      storageClassName: gp2-small
  tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "application"
          effect: "NoSchedule"
  configData:
    # we use `bin/pulsar` for starting bookie daemons
    PULSAR_ROUTING_APPENDER_DEFAULT: "RollingFile"
    PULSAR_MEM: >
      -Xms128m
      -Xmx256m
      -XX:MaxDirectMemorySize=256m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=33
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
      -XX:+PrintGCDetails
      -verbosegc
      -XX:+PerfDisableSharedMem
      -XX:+PrintGCDetails
      -XX:+IgnoreUnrecognizedVMOptions
      -Xloggc:/pulsar/bookie-gc.log
      -XX:G1LogLevel=finest

broker:
  replicaCount: 3
  serviceAccount:
    name: athenz-cert-issuer
    annotations: 
      eks.amazonaws.com/role-arn: arn:aws:iam::454759051864:role/irsa-awstest
  configData:
   functionsWorkerEnabled: "false"
   PULSAR_ROUTING_APPENDER_DEFAULT: "RollingFile"
   tlsCertificateFilePath: "/pulsar/conf/broker-cert.pem"
   tlsKeyFilePath: "/pulsar/conf/broker-key.pem"
   tlsRequireTrustedClientCertOnConnect: "false"
   tlsCertRefreshCheckDurationSec: "300"
   tlsTrustCertsFilePath: "/pulsar/conf/cacert.pem"
   brokerServicePortTls: "6651"
   tlsAllowInsecureConnection: "true"
   tlsEnabled: "true"
   tlsCiphers: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
   tlsProtocols: "TLSv1.2"
   webServicePortTls: "4443"
   brokerClientAuthenticationParameters: "tlsCertFile:/pulsar/conf/client-cert.pem,tlsKeyFile:/pulsar/conf/client-key.pem"
   brokerClientAuthenticationPlugin: "org.apache.pulsar.client.impl.auth.AuthenticationTls"
   brokerClientTrustCertsFilePath: "/pulsar/conf/cacert.pem"
   brokerClientTlsEnabled: "true"
   sia_config: |
    {
      "version": "1.0.0",
      "service": "awstest",
      "accounts": [
        {
          "domain":  "cms.aws.nonprod",
          "account": "454759051864"
        }
      ]
    }
  volumes:
    # use a persistent volume or emptyDir
    persistence: true
    data:
      name: data
      size: 5Gi
      local_storage: false
      ## If you already have an existent storage class and want to reuse it, you can specify its name with the option below
      ##
      storageClassName: gp2-small
      #
      ## Instead if you want to create a new storage class define it below
      ## If left undefined no storage class will be defined along with PVC
      ##
      # storageClass:
        # type: pd-ssd
        # fsType: xfs
        # provisioner: kubernetes.io/gce-pd
